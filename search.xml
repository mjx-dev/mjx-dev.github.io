<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>利用hexo和Github Pages创建自己的博客</title>
      <link href="/2019/08/03/1_create_hexo_blog/"/>
      <url>/2019/08/03/1_create_hexo_blog/</url>
      
        <content type="html"><![CDATA[<h2 id="配置环境"><a href="#配置环境" class="headerlink" title="配置环境"></a>配置环境</h2><h3 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a>安装Node.js</h3><p>打开<a href="https://nodejs.org/en/download/" target="_blank" rel="noopener">nodejs官网下载页面</a>下载对应的安装包(windows用户选Windows Installer(.msi))</p><p><img src="https://cdn.jsdelivr.net/gh/mjx-dev/assets@master/website/img/blog/1_nodejs_download_page.png"></p><p>一路点击"Next",最后点"Finish"完成安装</p><h3 id="安装Git"><a href="#安装Git" class="headerlink" title="安装Git"></a>安装Git</h3><h3 id="检验安装"><a href="#检验安装" class="headerlink" title="检验安装"></a>检验安装</h3><p>打开cmd输入以下命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git --version</span><br><span class="line">$ node -v</span><br><span class="line">$ npm -v</span><br></pre></td></tr></table></figure><p>如果安装成功,将会输出版本信息，如图：</p><p><img src="https://cdn.jsdelivr.net/gh/mjx-dev/assets@master/website/img/blog/1_cmd_check.png"></p><h3 id="创建根目录-amp-安装Hexo"><a href="#创建根目录-amp-安装Hexo" class="headerlink" title="创建根目录&amp;安装Hexo"></a>创建根目录&amp;安装Hexo</h3><p>选择合适位置创建根目录(如C:\blog),进入根目录,先点击右键,再点击"Git Bash Here"</p><p><img src="https://cdn.jsdelivr.net/gh/mjx-dev/assets@master/website/img/blog/1_gitbash.png"></p><p>打开命令行后,依次输入以下命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-cli -g</span><br><span class="line">$ npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><h3 id="Hexo初始化"><a href="#Hexo初始化" class="headerlink" title="Hexo初始化"></a>Hexo初始化</h3><p>再在根目录下创建一个目录(如C:\blog\hexo),接下来cd到hexo目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> hexo</span><br></pre></td></tr></table></figure><p>运行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init</span><br></pre></td></tr></table></figure><p>最终会在hexo目录下生成一些文件</p><p><img src="https://cdn.jsdelivr.net/gh/mjx-dev/assets@master/website/img/blog/1_root_file.png"></p><h3 id="本地预览"><a href="#本地预览" class="headerlink" title="本地预览"></a>本地预览</h3><p>执行以下命令生成代码,并部署到本地</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo g</span><br><span class="line">$ hexo s</span><br></pre></td></tr></table></figure><p>运行成功后则会执行打印以下信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">INFO  Start processing</span><br><span class="line">INFO  Hexo is running at http://localhost:4000 . Press Ctrl+C to stop.</span><br></pre></td></tr></table></figure><p>此时可以打开<a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000/</a>查看效果</p><h3 id="部署到Github-Pages"><a href="#部署到Github-Pages" class="headerlink" title="部署到Github Pages"></a>部署到Github Pages</h3><h4 id="创建代码库"><a href="#创建代码库" class="headerlink" title="创建代码库"></a>创建代码库</h4><p>先<a href="https://github.com/new" target="_blank" rel="noopener">创建代码库</a>,格式如下</p><p><img src="https://cdn.jsdelivr.net/gh/mjx-dev/assets@master/website/img/blog/1_create_repository.png"></p><h4 id="生成ssh-key"><a href="#生成ssh-key" class="headerlink" title="生成ssh key"></a>生成ssh key</h4><p>再进入根目录(如C:/blog)Git Bash Here,输入以下命令,<b style="color:red">将引号内内容替换成你的邮箱</b></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">"your email@example.com"</span></span><br></pre></td></tr></table></figure><p>接下来按回车采用默认地址保存</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Generating public/private rsa key pair.</span><br><span class="line">Enter file <span class="keyword">in</span> <span class="built_in">which</span> to save the key (/c/Users/you/.ssh/id_rsa):</span><br></pre></td></tr></table></figure><p>输入密码(不需要密码时则按回车)<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Enter passphrase (empty <span class="keyword">for</span> no passphrase):</span><br><span class="line">Enter same passphrase again:</span><br></pre></td></tr></table></figure></p><p>最终会输出指纹(fingerprint)和图像(randomart image),如图</p><img src="https://cdn.jsdelivr.net/gh/mjx-dev/assets@master/website/img/blog/1_ssh_generation.png"><p>执行如下命令以复制公钥内容</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ clip &lt; ~/.ssh/id_rsa.pub</span><br></pre></td></tr></table></figure><h4 id="在Github上传公钥"><a href="#在Github上传公钥" class="headerlink" title="在Github上传公钥"></a>在Github上传公钥</h4><p>先点击头像,再点击设置(settings)</p><img src="https://cdn.jsdelivr.net/gh/mjx-dev/assets@master/website/img/blog/1_github_setting.png"><p>进入设置后,再点"SSH and GPG keys"</p><img src="https://cdn.jsdelivr.net/gh/mjx-dev/assets@master/website/img/blog/1_github_ssh.png"><p>点击"New SSH key"以增加公钥</p><img src="https://cdn.jsdelivr.net/gh/mjx-dev/assets@master/website/img/blog/1_github_add_ssh.png"><p>在title处输入名字(随便取),在key中粘贴公钥内容,点"Add SSH key"增加公钥</p><img src="https://cdn.jsdelivr.net/gh/mjx-dev/assets@master/website/img/blog/1_github_ssh_content.png"><p>添加成功</p><img src="https://cdn.jsdelivr.net/gh/mjx-dev/assets/website/img/blog/1_github_ssh_finish.png"><h4 id="测试连接"><a href="#测试连接" class="headerlink" title="测试连接"></a>测试连接</h4><p>输入以下内容,<b style="color:red">注意:不要更改!</b></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh -T git@github.com</span><br></pre></td></tr></table></figure><p>输出以下内容则代表连接成功</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Hi yourname! You<span class="string">'ve successfully authenticated, but GitHub does not provide shell access.</span></span><br></pre></td></tr></table></figure><h4 id="配置个人信息"><a href="#配置个人信息" class="headerlink" title="配置个人信息"></a>配置个人信息</h4><p>输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global user.name <span class="string">"你的用户名"</span></span><br><span class="line">$ git config --global user.email <span class="string">"你的邮箱"</span></span><br></pre></td></tr></table></figure><h4 id="上传hexo文件"><a href="#上传hexo文件" class="headerlink" title="上传hexo文件"></a>上传hexo文件</h4><p>进入储存库,按图中步骤复制ssh地址</p><img src="https://cdn.jsdelivr.net/gh/mjx-dev/assets@master/website/img/blog/1_get_ssh_url.png"><p>接着用notepad++打开hexo目录下的_config.yml(没有notepad++的可以用自带记事本打开)</p><img src="https://cdn.jsdelivr.net/gh/mjx-dev/assets@master/website/img/blog/1_notepad_edit.png"><p>按图中要求填写,<b style="color:red">所有冒号后都要有一个空格</b></p><img src="https://cdn.jsdelivr.net/gh/mjx-dev/assets@master/website/img/blog/1_deploy_config.png"><p>在hexo目录下执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo g -d</span><br></pre></td></tr></table></figure><p>生成并发布到github上</p><h2 id="博客建设"><a href="#博客建设" class="headerlink" title="博客建设"></a>博客建设</h2><h3 id="发表博文"><a href="#发表博文" class="headerlink" title="发表博文"></a>发表博文</h3><p>执行以下命令会在\hexo\source\_post目录下生成"title.md"文件,<b style="color:red">在引号内填入文章名字</b></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo n <span class="string">"title"</span></span><br></pre></td></tr></table></figure><p>接着用编辑器打开"title.md",保存后重新生成</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo g</span><br></pre></td></tr></table></figure><p>或生成并发布</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo g -d</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2019/07/30/hello-world/"/>
      <url>/2019/07/30/hello-world/</url>
      
        <content type="html"><![CDATA[<h2 id="Hello-world"><a href="#Hello-world" class="headerlink" title="Hello world"></a>Hello world</h2><h3 id="本小站档案"><a href="#本小站档案" class="headerlink" title="本小站档案"></a>本小站档案</h3><blockquote><p>生日:2019-8-6-18:18:18<br>简介:一个小白分享技术的博客<br>位置:地球<br>作者:mjx<br>网址:<a href="https://mjx-dev.github.io">https://mjx-dev.github.io</a></p></blockquote><h3 id="欢迎各行各业的朋友"><a href="#欢迎各行各业的朋友" class="headerlink" title="欢迎各行各业的朋友"></a>欢迎各行各业的朋友</h3><div id="binft" align="center"></div>      <script>            var binft = function (r) {      function t() {        return b[Math.floor(Math.random() * b.length)]      }        function e() {        return String.fromCharCode(94 * Math.random() + 33)      }      function n(r) {        for (var n = document.createDocumentFragment(), i = 0; r > i; i++) {          var l = document.createElement("span");          l.textContent = e(), l.style.color = t(), n.appendChild(l)        }        return n      }      function i() {        var t = o[c.skillI];        c.step ? c.step-- : (c.step = g, c.prefixP < l.length ? (c.prefixP >= 0 && (c.text += l[c.prefixP]), c.prefixP++) : "forward" === c.direction ? c.skillP < t.length ? (c.text += t[c.skillP], c.skillP++) : c.delay ? c.delay-- : (c.direction = "backward", c.delay = a) : c.skillP > 0 ? (c.text = c.text.slice(0, -1), c.skillP--) : (c.skillI = (c.skillI + 1) % o.length, c.direction = "forward")), r.textContent = c.text, r.appendChild(n(c.prefixP < l.length ? Math.min(s, s + c.prefixP) : Math.min(s, t.length - c.skillP))), setTimeout(i, d)      }      var l = "",      o = ["欢迎光临本小站"].map(function (r) {      return r + ""      }),      a = 2,      g = 1,      s = 5,      d = 75,      b = ["rgb(110,64,170)", "rgb(150,61,179)", "rgb(191,60,175)", "rgb(228,65,157)", "rgb(254,75,131)", "rgb(255,94,99)", "rgb(255,120,71)", "rgb(251,150,51)", "rgb(226,183,47)", "rgb(198,214,60)", "rgb(175,240,91)", "rgb(127,246,88)", "rgb(82,246,103)", "rgb(48,239,130)", "rgb(29,223,163)", "rgb(26,199,194)", "rgb(35,171,216)", "rgb(54,140,225)", "rgb(76,110,219)", "rgb(96,84,200)"],      c = {        text: "",        prefixP: -s,        skillI: 0,        skillP: 0,        direction: "forward",        delay: a,        step: g      };      i()      };      binft(document.getElementById('binft'));      </script><p><a href="https://mjx-dev.github.io">去首页</a><br><a href="#comments">去评价</a><br><a href="https://mjx-dev.github.io/about#comments">去留言</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> hello world </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
